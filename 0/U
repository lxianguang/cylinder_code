/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (1 0 0);

boundaryField
{
    /*in
    {

        type            fixedValue;
        value           uniform (1 0 0);
    }*/
	
	in
	{
		type 			codedFixedValue;
		value           uniform (1 0 0);
		
		name	velocityin;
		code
		#{
			const vectorField& Cf = patch().Cf();  //获取入口界面
        	vectorField& uMine = *this;

        	scalar t = this->db().time().value();  //获取计算时间

			forAll(Cf, faceI) //遍历所有单元
			{
                if(t <= 5)
                {
                	uMine[faceI] = vector(1+0.1*Cf[faceI].y()/24, 0, 0);  //线性剪切流
				}
				else
				{
					uMine[faceI] = vector(1, 0, 0);  //均匀流
				}
                //uMine[faceI] = vector(1.0 + Cf[faceI].y()/24, 0, 0);
			}
		#};
	 } 
	
    out
    {
        type            zeroGradient;

	/*type		inletOutlet;
	phi		phi;
	inletValue	uniform (0 0 0);
	value		uniform (1 0 0);
	
	*/
    }

    cylinder
    {
        type            noSlip;
    }

    sym1
    {
        type            symmetryPlane;
    }

    sym2
    {
        type            symmetryPlane;
    }

    back
    {
        type            empty;
    }

    front
    {
        type            empty;
    }
}

// ************************************************************************* //
