/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    //back up
    (0.5 0 -0.5)                  	//0
    (2.0 0 -0.5)                    //1 
    (80 0 -0.5)                   	//2   
    (80 1.414214 -0.5)            	//3 
    (1.414214 1.414214 -0.5)      	//4
    (0.353553 0.353553 -0.5)      	//5
    (80 24 -0.5)                   	//6  
    (1.414214 24 -0.5)             	//7
    (0 24 -0.5)                    	//8 
    (0 2.0 -0.5)                    //9
    (0 0.5 -0.5)                  	//10
    (-0.5 0 -0.5)                 	//11
    (-2.0 0 -0.5)                   //12 
    (-24 0 -0.5)                   	//13
    (-24 1.414214 -0.5)            	//14
    (-1.414214 1.414214 -0.5)     	//15
    (-0.353553 0.353553 -0.5)     	//16
    (-24 24 -0.5)                   //17
    (-1.414214 24 -0.5)            	//18
    
    //front up
    (0.5 0 0.5)                  	//19
    (2.0 0 0.5)                     //20
    (80 0 0.5)                   	//21  
    (80 1.414214 0.5)            	//22
    (1.414214 1.414214 0.5)      	    //23
    (0.353553 0.353553 0.5)      	//24
    (80 24 0.5)                   	//25 
    (1.414214 24 0.5)             	//26
    (0 24 0.5)                    	//27
    (0 2.0 0.5)                     //28
    (0 0.5 0.5)                  	//29
    (-0.5 0 0.5)                 	//30
    (-2.0 0 0.5)                    //31 
    (-24 0 0.5)                   	//32
    (-24 1.414214 0.5)            	//33
    (-1.414214 1.414214 0.5)     	    //34
    (-0.353553 0.353553 0.5)     	//35
    (-24 24 0.5)                    //36
    (-1.414214 24 0.5)            	//37
    
    //back down
    (80 -1.414214 -0.5)            	//38
    (1.414214 -1.414214 -0.5)      	//39
    (0.353553 -0.353553 -0.5)      	//40
    (80 -24 -0.5)                   //41 
    (1.414214 -24 -0.5)             	//42
    (0 -24 -0.5)                    //43
    (0 -2.0 -0.5)                   //44
    (0 -0.5 -0.5)                  	//45
    (-24 -1.414214 -0.5)            	//46
    (-1.414214 -1.414214 -0.5)     	//47
    (-0.353553 -0.353553 -0.5)     	//48
    (-24 -24 -0.5)                  //49
    (-1.414214 -24 -0.5)            	//50
    
    //front down
    (80 -1.414214 0.5)            	//51
    (1.414214 -1.414214 0.5)      	//52
    (0.353553 -0.353553 0.5)      	//53
    (80 -24 0.5)                    //54 
    (1.414214 -24 0.5)             	//55
    (0 -24 0.5)                     //56
    (0 -2.0 0.5)                    //57
    (0 -0.5 0.5)                  	//58
    (-24 -1.414214 0.5)            	//59
    (-1.414214 -1.414214 0.5)     	//60
    (-0.353553 -0.353553 0.5)     	//61
    (-24 -24 0.5)                   //62
    (-1.414214 -24 0.5)            	//63
   
);

blocks
(
    //up
    hex (5 4 9 10 24 23 28 29) (60 15 1) simpleGrading (10 1 1)       	//0
    hex (0 1 4 5 19 20 23 24) (60 15 1) simpleGrading (10 1 1)         	//1
    hex (1 2 3 4 20 21 22 23) (180 15 1) simpleGrading (15 1 1)         //2
    hex (4 3 6 7 23 22 25 26) (180 80 1) simpleGrading (15 1 1)         //3 
    hex (9 4 7 8 28 23 26 27) (15 80 1) simpleGrading (1 1 1)         	//4
    hex (15 16 10 9 34 35 29 28) (60 15 1) simpleGrading (0.1 1 1)      //5
    hex (12 11 16 15 31 30 35 34) (60 15 1) simpleGrading (0.1 1 1)     //6
    hex (13 12 15 14 32 31 34 33) (80 15 1) simpleGrading (1 1 1)   	//7
    hex (14 15 18 17 33 34 37 36) (80 80 1) simpleGrading (1 1 1)   	//8
    hex (15 9 8 18 34 28 27 37) (15 80 1) simpleGrading (1 1 1)       	//9
    
    //down
    hex (40 45 44 39 53 58 57 52) (15 60 1) simpleGrading (1 10 1)      //10 
    hex (0 40 39 1 19 53 52 20) (15 60 1) simpleGrading (1 10 1)        //11  
    hex (1 39 38 2 20 52 51 21) (15 180 1) simpleGrading (1 15 1)       //12 
    hex (39 42 41 38 52 55 54 51) (80 180 1) simpleGrading (1 15 1)     //13   
    hex (44 43 42 39 57 56 55 52) (80 15 1) simpleGrading (1 1 1)       //14 
    hex (47 44 45 48 60 57 58 61) (15 60 1) simpleGrading (1 0.1 1)     //15 
    hex (12 47 48 11 31 60 61 30) (15 60 1) simpleGrading (1 0.1 1)     //16 
    hex (13 46 47 12 32 59 60 31) (15 80 1) simpleGrading (1 1 1)  	    //17  
    hex (46 49 50 47 59 62 63 60) (80 80 1) simpleGrading (1 1 1)  	    //18  
    hex (47 50 43 44 60 63 56 57) (80 15 1) simpleGrading (1 1 1)       //19   
);

edges
(
    //up
    arc 0 5 (0.461939 0.191342 -0.5)
    arc 5 10 (0.191342 0.461939 -0.5)
    arc 19 24 (0.461939 0.191342 0.5)
    arc 24 29 (0.191342 0.461939 0.5)
    arc 11 16 (-0.461939 0.191342 -0.5)
    arc 16 10 (-0.191342 0.461939 -0.5)
    arc 30 35 (-0.461939 0.191342 0.5)
    arc 35 29 (-0.191342 0.461939 0.5)

    arc 15 9 (-0.765367 1.847759 -0.5)
    arc 12 15 (-1.847759 0.765367 -0.5)
    arc 1 4 (1.847759 0.765367 -0.5)
    arc 4 9 (0.765367 1.847759 -0.5)
    arc 34 28 (-0.765367 1.847759 0.5)
    arc 23 28 (0.765367 1.847759 0.5)
    arc 20 23 (1.847759 0.765367 0.5)
    arc 31 34 (-1.847759 0.765367 0.5)

    //down
    arc 0 40 (0.461939 -0.191342 -0.5)
    arc 40 45 (0.191342 -0.461939 -0.5)
    arc 19 53 (0.461939 -0.191342 0.5)
    arc 53 58 (0.191342 -0.461939 0.5)
    arc 11 48 (-0.461939 -0.191342 -0.5)
    arc 48 45 (-0.191342 -0.461939 -0.5)
    arc 30 61 (-0.461939 -0.191342 0.5)
    arc 61 58 (-0.191342 -0.461939 0.5)

    arc 1 39  (1.847759 -0.765367 -0.5)
    arc 39 44 (0.765367 -1.847759 -0.5)
    arc 20 52 (1.847759 -0.765367 0.5)
    arc 52 57 (0.765367 -1.847759 0.5) 
    arc 47 44 (-0.765367 -1.847759 -0.5)
    arc 12 47 (-1.847759 -0.765367 -0.5)
    arc 31 60 (-1.847759 -0.765367 0.5)
    arc 60 57 (-0.765367 -1.847759 0.5)  
);

patches
(
    
    patch out
    (
        //up
        (2 3 22 21)
        (3 6 25 22)
        
        //down
        (38 2 21 51) 
        (41 38 51 54) 

    )
    symmetryPlane sym1
    (
        (7 8 27 26)
        (6 7 26 25)
        (8 18 37 27)
        (18 17 36 37)
    )
        
    symmetryPlane sym2
    (
        (43 42 55 56) 
        (42 41 54 55) 
        (50 43 56 63) 
        (49 50 63 62) 
    )

    patch in
    (
        //up
        (14 13 32 33)
        (17 14 33 36)
        
        //down
        (13 46 59 32) 
        (46 49 62 59) 
    
    )
    wall cylinder
    (
        //up
        (10 5 24 29)
        (5 0 19 24)
        (16 10 29 35)
        (11 16 35 30)
        
        //down
        (40 45 58 53) 
        (0 40 53 19)  
        (45 48 61 58) 
        (48 11 30 61) 

    )

    empty back 
    (
       //up
       (5 10 9 4)
       (0 5 4 1)
       (1 4 3 2)
       (4 7 6 3)
       (9 8 7 4)
       (16 15 9 10)
       (11 12 15 16)
       (12 13 14 15)
       (14 17 18 15)
       (15 18 8 9)

       //down
       (45 40 39 44)
       (40 0 1 39)
       (1 2 38 39)
       (39 38 41 42)
       (44 39 42 43)
       (48 45 44 47)
       (11 48 47 12)
       (13 12 47 46)
       (46 47 50 49)
       (47 44 43 50)
    )

    empty front
    (
       //up
       (24 23 28 29)
       (20 23 24 19)
       (21 22 23 20)
       (22 25 26 23)
       (26 27 28 23)
       (28 34 35 29)
       (34 31 30 35)
       (33 32 31 34 )
       (36 33 34 37)
       (37 34 28 27)
 
       //down
       (53 58 57 52)
       (19 53 52 20)
       (21 20 52 51)
       (51 52 55 54)
       (52 57 56 55)
       (58 61 60 57)
       (61 30 31 60)
       (31 32 59 60)
       (60 59 62 63)
       (57 60 63 56)
    )
     
);

mergePatchPairs
(
);

// ************************************************************************* //
